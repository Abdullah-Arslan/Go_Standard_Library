/*
**Go dilinde `cmplx` paketini** en baÅŸtan sona kadar aÃ§Ä±klayayÄ±m.

---

## ğŸ“Œ `cmplx` Paketi Nedir?

`cmplx` paketi, Go dilinde **karmaÅŸÄ±k sayÄ±lar (complex numbers)** Ã¼zerinde matematiksel iÅŸlemler yapabilmek iÃ§in kullanÄ±lan standart kÃ¼tÃ¼phanedir.

Go dilinde **karmaÅŸÄ±k sayÄ±lar** `complex64` ve `complex128` tiplerinde bulunur:

* `complex64` â†’ `float32` + `float32i`
* `complex128` â†’ `float64` + `float64i`

`cmplx` paketi Ã¶zellikle `complex128` tipinde Ã§alÄ±ÅŸÄ±r ve trigonometrik, logaritmik, Ã¼stel, kÃ¶k alma gibi fonksiyonlar saÄŸlar.

---

## ğŸ“Œ Paket Ä°mport Edilmesi
*/
``go
import (
    "fmt"
    "math/cmplx"
)
``
/*
---

## ğŸ“Œ `cmplx` Paketindeki Fonksiyonlar ve Ã–rnekler

### 1. **Temel Fonksiyonlar**

#### ğŸ”¹ `Abs(x complex128) float64`

Bir karmaÅŸÄ±k sayÄ±nÄ±n **mutlak deÄŸerini (bÃ¼yÃ¼klÃ¼ÄŸÃ¼nÃ¼)** dÃ¶ndÃ¼rÃ¼r.
FormÃ¼l: `âˆš(realÂ² + imagÂ²)`
*/
``go
z := complex(3, 4) // 3 + 4i
fmt.Println(cmplx.Abs(z)) // 5
``
/*
---

#### ğŸ”¹ `Phase(x complex128) float64`

KarmaÅŸÄ±k sayÄ±nÄ±n aÃ§Ä±sÄ±nÄ± (radyan cinsinden) dÃ¶ndÃ¼rÃ¼r.
FormÃ¼l: `atan2(imag, real)`
*/
``go
z := complex(1, 1)
fmt.Println(cmplx.Phase(z)) // 0.785398163 (Ï€/4)
``
/*
---

#### ğŸ”¹ `Polar(x complex128) (r, Î¸ float64)`

Bir karmaÅŸÄ±k sayÄ±yÄ± **kutupsal koordinatlara** Ã§evirir.
*/
``go
z := complex(1, 1)
r, Î¸ := cmplx.Polar(z)
fmt.Println(r, Î¸) // 1.414213562 0.785398163
``
/*
---

#### ğŸ”¹ `Rect(r, Î¸ float64) complex128`

Kutupsal koordinatlarÄ± (`r, Î¸`) tekrar **dikdÃ¶rtgen (kartesyen)** forma Ã§evirir.
?7
``go
z := cmplx.Rect(2, cmplx.Pi/4)
fmt.Println(z) // (1.414213562 + 1.414213562i)
``
/*
---

### 2. **Ãœstel ve Logaritmik Fonksiyonlar**

#### ğŸ”¹ `Exp(x complex128) complex128`

`e^x` deÄŸerini dÃ¶ndÃ¼rÃ¼r.
?7
``go
z := complex(0, math.Pi)
fmt.Println(cmplx.Exp(z)) // -1+0i
``
/*
---

#### ğŸ”¹ `Log(x complex128) complex128`

KarmaÅŸÄ±k logaritma (`ln(x)`).
*/
``go
z := complex(1, 1)
fmt.Println(cmplx.Log(z)) // (0.34657 + 0.78539i)
``
/*
---

#### ğŸ”¹ `Log10(x complex128) complex128`

10 tabanÄ±nda logaritma.
*/
``go
z := complex(100, 0)
fmt.Println(cmplx.Log10(z)) // (2+0i)
``
/*
---

#### ğŸ”¹ `Sqrt(x complex128) complex128`

KarmaÅŸÄ±k karekÃ¶k.
*/
``go
z := complex(-1, 0)
fmt.Println(cmplx.Sqrt(z)) // (0+1i)
``
/*
---

### 3. **Trigonometrik Fonksiyonlar**

* `Sin(x complex128) complex128`
* `Cos(x complex128) complex128`
* `Tan(x complex128) complex128`
*/
``go
z := complex(0, math.Pi/2)
fmt.Println(cmplx.Sin(z)) // (0+2.301298902i)
fmt.Println(cmplx.Cos(z)) // (2.509178478+0i)
fmt.Println(cmplx.Tan(z)) // (0+0.917152335i)
``
/*
---

### 4. **Ters Trigonometrik Fonksiyonlar**

* `Asin(x complex128) complex128`
* `Acos(x complex128) complex128`
* `Atan(x complex128) complex128`
*/
``go
z := complex(1, 0)
fmt.Println(cmplx.Asin(z)) // (1.570796327+0i)
fmt.Println(cmplx.Acos(z)) // (0+0i)
fmt.Println(cmplx.Atan(z)) // (0.785398163+0i)
``
/*
---

### 5. **Hiperbolik Fonksiyonlar**

* `Sinh(x complex128) complex128`
* `Cosh(x complex128) complex128`
* `Tanh(x complex128) complex128`
*/
``go
z := complex(1, 1)
fmt.Println(cmplx.Sinh(z)) // (0.6349639148+1.29845758i)
fmt.Println(cmplx.Cosh(z)) // (0.8337300251+0.9888977058i)
fmt.Println(cmplx.Tanh(z)) // (1.08392333e-19+0.76159415595i)
``
/*
---

### 6. **Ters Hiperbolik Fonksiyonlar**

* `Asinh(x complex128) complex128`
* `Acosh(x complex128) complex128`
* `Atanh(x complex128) complex128`
*/
``go
z := complex(1, 0)
fmt.Println(cmplx.Asinh(z)) // (0.881373587+0i)
fmt.Println(cmplx.Acosh(z)) // (0+1.047197551i)
fmt.Println(cmplx.Atanh(z)) // (0.549306144+0i)
``
/*
---

### 7. **Sabitler**

* `cmplx.Pi` â†’ Ï€ (pi sayÄ±sÄ±, `3.14159...`)
*/
``go
fmt.Println(cmplx.Pi) // 3.141592653589793
``

//---

## ğŸ“Œ Ã–zet Tablo

| Fonksiyon Kategorisi   | Fonksiyonlar                    |
| ---------------------- | ------------------------------- |
| **Temel**              | `Abs`, `Phase`, `Polar`, `Rect` |
| **Ãœstel / Logaritmik** | `Exp`, `Log`, `Log10`, `Sqrt`   |
| **Trigonometrik**      | `Sin`, `Cos`, `Tan`             |
| **Ters Trigonometrik** | `Asin`, `Acos`, `Atan`          |
| **Hiperbolik**         | `Sinh`, `Cosh`, `Tanh`          |
| **Ters Hiperbolik**    | `Asinh`, `Acosh`, `Atanh`       |
| **Sabitler**           | `Pi`                            |
/*
---

## âœ… SonuÃ§

`cmplx` paketi, Goâ€™da **karmaÅŸÄ±k sayÄ±larla bilimsel ve mÃ¼hendislik hesaplamalarÄ±** yapabilmek iÃ§in kullanÄ±lÄ±r. Trigonometriden logaritmaya, kÃ¶k almadan kutupsal dÃ¶nÃ¼ÅŸÃ¼me kadar birÃ§ok fonksiyon iÃ§erir.

---

Ä°stersen ben sana bu bilgileri **PDF** ve **Excel tablo** halinde hazÄ±rlayÄ±p verebilirim. Offline Ã§alÄ±ÅŸÄ±rken kolay olur. Ä°stiyor musun?
EVET
*/